{"version":3,"file":"static/js/540.ac8fc138.chunk.js","mappings":"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","sources":["components/ContactForm.jsx","components/FilteredUsers.jsx","components/ContactList.jsx","components/Notification.jsx","utilities/isEmpty.js","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { useAddContactMutation } from 'services/phonebookApi';\n\nconst Inputbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n  &:last-child {\n  margin-bottom: 0;\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    color: red;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:valid ~ span {\n    color: #86af49;\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  width: 50%;\n  background: dodgerblue;\n  color: #fff;\n  border: #fff;\n  &:hover {\n    background: linear-gradient(85deg, blue);\n  }\n`;\n\nconst ContactForm = ({ contacts }) => {\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = evt => {\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    evt.preventDefault();\n\n    for (const contact of contacts) {\n      if (contact.name === name)\n        return alert(\n          `${name} is already in your contacts with the phone number ${contact.number}`\n        );\n\n      if (contact.number === number)\n        return alert(\n          `${number} is already in your contacts with the name ${contact.name}`\n        );\n    }\n    addContact({ name, number });\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Name</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\" \"\n          />\n          <Span>Number</Span>\n        </label>\n      </Inputbox>\n      <Inputbox>\n        <Btn type=\"submit\">Add contact</Btn>\n      </Inputbox>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from './redux/Actions';\n\nconst Filterbox = styled.div`\n  position: relative;\n  max-width: 100%;\n  height: 50px;\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  border: 2px solid #000;\n  outline: none;\n  background: none;\n  padding: 10px;\n  border-radius: 10px;\n  font-size: 1.2em;\n  box-sizing: border-box;\n  &:focus ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n  &:not(:placeholder-shown) ~ span {\n    transform: translateX(-13px) translateY(-35px);\n    font-size: 1em;\n  }\n`;\n\nconst Span = styled.span`\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  font-size: 1em;\n  transition: 0.6s;\n  font-family: sans-serif;\n`;\n\nconst FilteredUsers = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const onFilter = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n  return (\n    <Filterbox>\n      <label>\n        <Input\n          onChange={onFilter}\n          type=\"text\"\n          value={filter}\n          name=\"filter\"\n          placeholder=\" \"\n        />\n        <Span>Find contacts by name</Span>\n      </label>\n    </Filterbox>\n  );\n};\n\nexport default FilteredUsers;\n","import styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport { useDeleteContactMutation } from 'services/phonebookApi';\n\nconst List = styled.li`\n  display: flex;\n  &::before {\n    content: '•';\n    color: red;\n    font-weight: bold;\n    display: inline-block;\n    width: 1em;\n  }\n`;\n\nconst Btn = styled.button`\n  cursor: pointer;\n  border: 2px solid #fff;\n  outline: none;\n  padding: 6px;\n  border-radius: 10px;\n  font-size: 1em;\n  width: 30%;\n  background: blue;\n  color: #fff;\n  &:hover {\n    background: dodgerblue);\n  }\n`;\n\nconst ElementWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst ContactList = ({ contacts }) => {\n  const filter = useSelector(state => state.filter);\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  const filteredContacts = useMemo(\n    () =>\n      contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    [normalizedFilter, contacts]\n  );\n\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ElementWrapper key={'el' + id}>\n          <List key={id}>\n            <a href={`tel:${number}`}>\n              {name} <br />\n              {number}\n            </a>\n          </List>\n          <Btn key={'btn' + id} onClick={() => deleteContact(id)}>\n            Delete\n          </Btn>\n        </ElementWrapper>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nconst Message = styled.p`\n  font-size: 1em;\n  font-family: sans-serif;\n`;\n\nconst Notification = () => {\n  return (\n    <>\n      <Message>There is no contacts to show</Message>\n    </>\n  );\n};\n\nexport default Notification;\n","const isEmpty = arr => arr.length === 0;\n\nexport default isEmpty;\n","import ContactForm from '../components/ContactForm';\nimport FilteredUsers from '../components/FilteredUsers';\nimport ContactList from '../components/ContactList';\nimport styled from 'styled-components';\nimport { useGetContactsQuery } from 'services/phonebookApi';\nimport Notification from '../components/Notification';\nimport isEmpty from 'utilities/isEmpty';\nimport Loader from '../components/Loader';\n\nconst Center = styled.div`\n    max-width: 400px;\n    margin: 0 auto 25px auto;\n    position: relative;\n    padding: 50px 25px;\n    background: #fff;\n    border-radius: 10px;\n    box-shadow: 0px 0px 0px 1px black;\n`;\n\nconst MainHeader = styled.h1`\n    font-size: 2em;\n\n    padding: 10px;\n    color: #000;\n    letter-spacing: 5px;\n    margin-bottom: 60px;\n    font-weight: bold;\n    padding-left: 10px;\n`;\n\nconst SecondHeader = styled.h2`\n    font-size: 1.5em;\n\n    padding: 10px;\n    color: #000;\n    letter-spacing: 5px;\n    margin-bottom: 60px;\n    font-weight: bold;\n    padding-left: 10px;\n`;\nconst SpinnerWrapper = styled.div`\n    margin: 10px 0 0 100px;\n`;\n\nconst Contacts = () => {\n    const {\n        data: contacts,\n        isLoading,\n        isSuccess,\n        isError,\n        error,\n    } = useGetContactsQuery();\n\n    let content;\n\n    if (isLoading) {\n        content = (\n            <SpinnerWrapper>\n                <Loader />\n            </SpinnerWrapper>\n        );\n    } else if (isSuccess && !isEmpty(contacts)) {\n        content = <ContactList contacts={contacts} />;\n    } else if (isSuccess && isEmpty(contacts)) {\n        content = <Notification />;\n    } else if (isError) {\n        content = <div>{error.toString()}</div>;\n    }\n\n    return (\n        <>\n            <Center>\n                <MainHeader>Phonebook</MainHeader>\n                <ContactForm contacts={contacts} />\n                <SecondHeader>Contacts</SecondHeader>\n                <FilteredUsers />\n                {content}\n            </Center>\n        </>\n    );\n};\n\nexport default Contacts;\n"],"names":["Inputbox","styled","Input","Span","Btn","contacts","useAddContactMutation","addContact","onSubmit","evt","form","target","name","value","number","preventDefault","contact","alert","reset","type","pattern","title","required","placeholder","Filterbox","filter","useSelector","state","dispatch","useDispatch","onChange","e","filterContacts","List","ElementWrapper","normalizedFilter","toLowerCase","trim","filteredContacts","useMemo","includes","sort","a","b","localeCompare","useDeleteContactMutation","deleteContact","map","id","href","onClick","Message","arr","length","Center","MainHeader","SecondHeader","SpinnerWrapper","content","useGetContactsQuery","data","isLoading","isSuccess","isError","error","Loader","isEmpty","toString"],"sourceRoot":""}