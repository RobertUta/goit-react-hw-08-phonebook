{"version":3,"file":"static/js/294.a7f1c50a.chunk.js","mappings":"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","sources":["components/AppToastContainer/AppToastContainer.jsx","components/PhonebookEditForm/PhonebookEditForm.styled.js","components/PhonebookEditForm/PhonebookEditForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function AppToastContainer() {\n    return (\n        <ToastContainer\n            position=\"top-right\"\n            autoClose={4500}\n            // hideProgressBar\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss={false}\n            draggable\n            pauseOnHover={false}\n            theme=\"light\"\n        />\n    );\n}\n","import { TextField, Button as Btn } from '@mui/material';\nimport styled from '@emotion/styled';\n\nexport const FormBody = styled.form`\n    padding: 30px 20px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    row-gap: 15px;\n    border-radius: 10px;\n    background-color: #fff;\n    width: 450px;\n    box-shadow: 0 0 0 1px rgba(3, 102, 214, 0.3) inset;\n`;\n\nexport const FormTitle = styled.h1`\n    padding: 0 0 15px 0;\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1;\n    color: #1976d2;\n`;\n\nexport const Input = styled(TextField)`\n    width: 100%;\n`;\n\nexport const Button = styled(Btn)`\n    display: block;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useState } from 'react';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContactThunk } from '../../redux/operations';\nimport { FormBody, Input, Button, FormTitle } from './PhonebookEditForm.styled';\n\nconst checkOnSameName = (contacts, name) => {\n    return Boolean(\n        contacts.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n    );\n};\n\nexport default function PhonebookEditForm() {\n    const [nameInputValue, setNameInputValue] = useState('');\n    const [numberInputValue, setNumberInputValue] = useState('');\n\n    const allContacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n    const formReset = () => {\n        setNameInputValue('');\n        setNumberInputValue('');\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const form = event.target;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        if (name === '') return;\n\n        if (checkOnSameName(allContacts, name)) {\n            return toast.info(`${name} is already in contacts`);\n        }\n\n        dispatch(addContactThunk({ name, number }))\n            .unwrap()\n            .then(() => toast.success('The contact was successfully added'))\n            .catch(() => toast.error('Something went wrong. Please try again'));\n\n        formReset();\n    };\n\n    const isReadyToSubmit = () => Boolean(nameInputValue && numberInputValue);\n\n    return (\n        <FormBody onSubmit={handleSubmit}>\n            <FormTitle>Add contact to your phonebook</FormTitle>\n            <Input\n                name=\"name\"\n                type=\"text\"\n                label=\"enter new contact name\"\n                size=\"small\"\n                value={nameInputValue}\n                onChange={evt => setNameInputValue(evt.target.value)}\n                inputProps={{\n                    pattern:\n                        \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n                    title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n                }}\n            />\n            <Input\n                name=\"number\"\n                type=\"tel\"\n                label=\"enter phone number\"\n                size=\"small\"\n                value={numberInputValue}\n                onChange={evt => setNumberInputValue(evt.target.value)}\n                inputProps={{\n                    pattern: `^[\\+]?[(]?[0-9]{1,5}[)]?[-\\s\\.]?[0-9]{1,3}[-\\s\\.]?[0-9]{4,6}$`, //eslint-disable-line\n                    title: 'Enter the number in the following formats: +xxxxxxxxxxxx, +xxxxx-xxx-xxxx or without \"+\", the maximum amount of digits in a number is 14',\n                }}\n            />\n            <Button\n                type=\"submit\"\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={!isReadyToSubmit()}\n            >\n                Add contact\n            </Button>\n        </FormBody>\n    );\n}\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const FormBody = styled.form`\n    padding: 30px 20px;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    row-gap: 15px;\n    border-radius: 10px;\n    background-color: #fff;\n    width: 450px;\n    box-shadow: 0 0 0 1px rgba(3, 102, 214, 0.3) inset;\n`;\n\nexport const FormTitle = styled.h2`\n    padding: 0 0 15px 0;\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1;\n    color: #1976d2;\n`;\n\nexport const Input = styled(TextField)`\n    width: 100%;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from '../../redux/filterSlice.js';\nimport { selectFilterValue } from '../../redux/selectors.js';\nimport { FormBody, FormTitle, Input } from './Filter.styled';\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n    const filterValue = useSelector(selectFilterValue);\n\n    const handleInputChange = evt => {\n        const newFilterValue = evt.target.value;\n        dispatch(setFilterValue(newFilterValue));\n    };\n\n    return (\n        <FormBody>\n            <FormTitle>Find contacts by name</FormTitle>\n            <Input\n                name=\"filter\"\n                type=\"text\"\n                label=\"enter name to find\"\n                size=\"small\"\n                value={filterValue}\n                onChange={handleInputChange}\n            />\n        </FormBody>\n    );\n}\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const ContactListWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    min-width: 600px;\n    padding: 30px 20px;\n\n    border-radius: 10px;\n    background-color: #fff;\n\n    box-shadow: 0 0 0 1px rgba(3, 102, 214, 0.3) inset;\n`;\n\nexport const Title = styled.h3`\n    padding: 0 0 24px 0;\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1;\n    color: #1976d2;\n`;\n\nexport const ContactList = styled.table`\n    width: 100%;\n`;\n\nexport const TableHeadRow = styled.tr`\n    //for screen readers\n    color: transparent;\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    height: 1px;\n    font-size: 1px;\n`;\n\nexport const ContactListItem = styled.tr`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 30px;\n    display: flex;\n    font-size: 17px;\n    border-bottom: 1px dashed grey;\n`;\n\nexport const NameText = styled.td`\n    font-size: 16px;\n    min-width: 250px;\n`;\nexport const NumberText = styled.td`\n    font-size: 16px;\n    min-width: 150px;\n`;\nexport const BtnWrapper = styled.td``;\n\nexport const StyledBtn = styled(Button)`\n    font-size: 13px;\n    padding: 0;\n    text-transform: capitalize;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContactThunk } from '../../redux/operations.js';\nimport { selectFilteredContacts } from '../../redux/selectors.js';\nimport {\n    ContactList,\n    ContactListItem,\n    StyledBtn,\n    NameText,\n    NumberText,\n    Title,\n    ContactListWrapper,\n    BtnWrapper,\n    TableHeadRow,\n} from './ContactsList.styled';\n\nexport default function ContactsList() {\n    const dispatch = useDispatch();\n    const filteredContacts = useSelector(selectFilteredContacts);\n\n    const handleDeleteBtn = id => dispatch(deleteContactThunk(id));\n\n    return (\n        <ContactListWrapper>\n            <Title>Your saved contacts</Title>\n            <ContactList>\n                <thead>\n                    <TableHeadRow>\n                        <th>Name</th>\n                        <th>Number</th>\n                        <th>Delete</th>\n                    </TableHeadRow>\n                </thead>\n                <tbody>\n                    {filteredContacts.map(({ name, number, id }) => (\n                        <ContactListItem key={id}>\n                            <NameText>{name}:</NameText>\n                            <NumberText>{number}</NumberText>\n                            <BtnWrapper>\n                                <StyledBtn\n                                    type=\"button\"\n                                    variant=\"outlined\"\n                                    size=\"small\"\n                                    onClick={() => {\n                                        handleDeleteBtn(id);\n                                    }}\n                                >\n                                    Delete\n                                </StyledBtn>\n                            </BtnWrapper>\n                        </ContactListItem>\n                    ))}\n                </tbody>\n            </ContactList>\n        </ContactListWrapper>\n    );\n}\n","import styled from '@emotion/styled';\nimport Container from '../../components/common/Container/';\n\nexport const Main = styled.main`\n    width: 100%;\n    overflow: hidden;\n    height: calc(100vh - 69px);\n    background-color: #e7ebf0;\n`;\n\nexport const ContactsContainer = styled(Container)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 10px;\n\n    font-size: 30px;\n    font-weight: bold;\n`;\n\nexport const NoContactsWrapper = styled.div`\n    padding: 30px 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10px;\n    background-color: #1976d2;\n    width: 450px;\n`;\n\nexport const NoContactsMessage = styled.h2`\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1;\n    color: #f7f710;\n`;\n\nexport const Section = styled.section`\n    padding: 10px 0 0 0;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsState } from '../../redux/selectors.js';\nimport { fetchContactsThunk } from '../../redux/operations.js';\nimport PhonebookEditForm from '../../components/PhonebookEditForm/';\nimport Filter from '../../components/Filter/Filter.jsx';\nimport AppToastContainer from '../../components/AppToastContainer';\nimport ContactsList from '../../components/ContactsList';\nimport {\n    Main,\n    ContactsContainer,\n    Section,\n    NoContactsWrapper,\n    NoContactsMessage,\n} from './ContactsPage.styled';\n\nexport default function Contacts() {\n    const { items, status, error } = useSelector(selectContactsState);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContactsThunk());\n    }, [dispatch]);\n\n    if (status === 'loading')\n        return (\n            <Main>\n                <Section>\n                    <ContactsContainer>\n                        <PhonebookEditForm />\n                        <h1>DATA UPDATE</h1>\n                    </ContactsContainer>\n                </Section>\n            </Main>\n        );\n    if (error)\n        return (\n            <Main>\n                <Section>\n                    <ContactsContainer>\n                        <h1>{error}</h1>\n                    </ContactsContainer>\n                </Section>\n            </Main>\n        );\n\n    return (\n        <Main>\n            <Section>\n                <ContactsContainer>\n                    <PhonebookEditForm />\n                </ContactsContainer>\n            </Section>\n            {items.length > 0 && (\n                <>\n                    <Section>\n                        <ContactsContainer>\n                            <Filter />\n                        </ContactsContainer>\n                    </Section>\n                    <Section>\n                        <ContactsContainer>\n                            <ContactsList />\n                        </ContactsContainer>\n                    </Section>\n                </>\n            )}\n            {items.length === 0 && (\n                <Section>\n                    <ContactsContainer>\n                        <NoContactsWrapper>\n                            <NoContactsMessage>\n                                You have no saved contacts, add them\n                            </NoContactsMessage>\n                        </NoContactsWrapper>\n                    </ContactsContainer>\n                </Section>\n            )}\n            <AppToastContainer />\n        </Main>\n    );\n}\n"],"names":["AppToastContainer","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","FormBody","styled","FormTitle","Input","TextField","Button","Btn","checkOnSameName","contacts","name","Boolean","find","contact","toLowerCase","PhonebookEditForm","useState","nameInputValue","setNameInputValue","numberInputValue","setNumberInputValue","allContacts","useSelector","selectContacts","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","elements","value","number","toast","addContactThunk","unwrap","then","catch","type","label","size","onChange","evt","inputProps","pattern","title","variant","disabled","Filter","filterValue","selectFilterValue","newFilterValue","setFilterValue","ContactListWrapper","Title","ContactList","TableHeadRow","ContactListItem","NameText","NumberText","BtnWrapper","StyledBtn","ContactsList","filteredContacts","selectFilteredContacts","map","id","onClick","deleteContactThunk","handleDeleteBtn","Main","ContactsContainer","Container","NoContactsWrapper","NoContactsMessage","Section","Contacts","selectContactsState","items","status","error","useEffect","fetchContactsThunk","length"],"sourceRoot":""}